// Copyright (c) Bentley Systems, Incorporated. All rights reserved.
// See LICENSE.md in the project root for license terms and full copyright notice.
@mixin iui-input-flex-container {
  --_iui-input-background-color: var(--iui-color-background);
  --_iui-input-border-color: var(--iui-color-border-foreground);
  --_iui-input-accent-border-color: var(--iui-color-border-accent);
  --_iui-input-text-color: var(--iui-color-text);

  &[disabled] {
    --_iui-input-background-color: var(--iui-color-background-disabled);
    --_iui-input-border-color: var(--iui-color-border-disabled);
    --_iui-input-with-icon-hover-border-color: var(--iui-color-border-disabled);
    cursor: not-allowed;
  }

  display: inline-flex;
  background-color: var(--_iui-input-background-color);
  border-radius: var(--iui-border-radius-1);
  color: var(--_iui-input-text-color);
  position: relative;
  height: var(--_iui-input-min-height);
  width: 100%;
  transition: width 0.2s;

  &:has(input:focus-visible) {
    outline: 2px solid var(--_iui-input-accent-border-color);
    outline-offset: -2px;
  }

  @supports not selector(:has(+ *)) {
    &:where(:focus-within) {
      outline: 2px solid var(--_iui-input-accent-border-color);
      outline-offset: -2px;
    }
  }

  &::before {
    content: '';
    position: absolute;
    border-radius: var(--iui-border-radius-1);
    border: 1px solid var(--_iui-input-border-color);
    inset: 0;
  }

  > input {
    all: unset;
    z-index: 2;
    width: 100%;
    padding-inline-start: var(--iui-size-s);
  }

  > button {
    height: 100%;
    z-index: 2;
  }
}

/// Mixin for applying status colors to input container.
/// @arg status - must be one of: positive, negative, warning
@mixin iui-flex-input-status($status) {
  --_iui-input-accent-border-color: var(--iui-color-border-#{$status});

  &::before {
    border-bottom: var(--iui-size-3xs) solid var(--_iui-input-accent-border-color);
  }
}

@mixin iui-expandable-searchbox {
  transition: width var(--iui-duration-3) ease;
  width: var(--_iui-input-min-height);

  &::before {
    content: '';
    position: absolute;
    inset: 0;
    background-color: inherit;
    z-index: 2;
  }

  &::after {
    --search-svg: url('data:image/svg+xml,<svg viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg">\
      <path d="M11 9.7c.7-1 1.1-2.2 1.1-3.5.1-3.5-2.7-6.2-6-6.2C2.7 0 0 2.7 0 6.1s2.7 6.1 6.1 6.1c1.3 0 2.5-.4 3.5-1.1l4.9 4.9 1.4-1.4zm-5 .5c-2.3 0-4.1-1.8-4.1-4.1S3.7 2 6 2s4.1 1.8 4.1 4.1-1.8 4.1-4.1 4.1"/>\
    </svg>');

    content: '';
    position: absolute;
    left: calc(var(--_iui-input-min-height) / 2);
    top: 50%;
    transform: translate(-50%, -50%);
    background-color: currentColor;
    mask: var(--search-svg) no-repeat center / contain;
    width: 1rem;
    height: 1rem;
    pointer-events: none;
    cursor: pointer;
    z-index: 2;
  }

  &[data-iui-expanded='true'],
  &:focus,
  &:focus-within {
    width: 100%;
    border-color: var(--_iui-input-border-color);

    &::before {
      background: unset;
    }

    &::after {
      content: unset;
    }
  }
}
