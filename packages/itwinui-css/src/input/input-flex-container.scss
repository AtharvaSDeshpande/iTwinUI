// Copyright (c) Bentley Systems, Incorporated. All rights reserved.
// See LICENSE.md in the project root for license terms and full copyright notice.
@mixin iui-input-flex-container {
  --_iui-input-background-color: var(--iui-color-background);
  --_iui-input-border-color: var(--iui-color-border-foreground);
  --_iui-input-accent-border-color: var(--iui-color-border-accent);
  --_iui-input-text-color: var(--iui-color-text);

  &[disabled] {
    --_iui-input-background-color: var(--iui-color-background-disabled);
    --_iui-input-border-color: var(--iui-color-border-disabled);
    --_iui-input-with-icon-hover-border-color: var(--iui-color-border-disabled);
    cursor: not-allowed;
  }

  display: inline-flex;
  background-color: var(--_iui-input-background-color);
  border-radius: var(--iui-border-radius-1);
  color: var(--_iui-input-text-color);
  position: relative;
  height: var(--_iui-input-min-height);
  width: 100%;
  transition: width 0.2s;

  &:has(input:focus-visible) {
    outline: 2px solid var(--_iui-input-accent-border-color);
    outline-offset: -2px;
  }

  @supports not selector(:has(+ *)) {
    &:where(:focus-within) {
      outline: 2px solid var(--_iui-input-accent-border-color);
      outline-offset: -2px;
    }
  }

  &::before {
    content: '';
    position: absolute;
    border-radius: var(--iui-border-radius-1);
    border: 1px solid var(--_iui-input-border-color);
    inset: 0;
  }

  > input {
    all: unset;
    z-index: 2;
    width: 100%;
    padding-inline-start: var(--iui-size-s);
  }

  > button {
    height: 100%;
    z-index: 2;
  }
}

/// Mixin for applying status colors to input container.
/// @arg status - must be one of: positive, negative, warning
@mixin iui-flex-input-status($status) {
  --_iui-input-accent-border-color: var(--iui-color-border-#{$status});

  &::before {
    border-bottom: var(--iui-size-3xs) solid var(--_iui-input-accent-border-color);
  }
}
