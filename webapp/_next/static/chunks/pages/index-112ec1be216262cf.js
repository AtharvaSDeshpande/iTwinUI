(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[405],{8312:function(__unused_webpack_module,__unused_webpack_exports,__webpack_require__){(window.__NEXT_P=window.__NEXT_P||[]).push(["/",function(){return __webpack_require__(3126)}])},3126:function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{AppThemeContext:function(){return AppThemeContext},MatchesContext:function(){return MatchesContext},RepoFolderContext:function(){return RepoFolderContext},default:function(){return pages_App}});var jsx_runtime=__webpack_require__(5893);__webpack_require__(1784);var ButtonGroup=__webpack_require__(4348),Tooltip=__webpack_require__(8716),IconButton=__webpack_require__(162),Tree=__webpack_require__(968),TreeNode=__webpack_require__(8901);__webpack_require__(4063);var react=__webpack_require__(7294),esm=__webpack_require__(3760),Toast=__webpack_require__(9501);let displayToast=(type,content)=>{Toast.Z.setSettings({placement:"bottom-end",order:"descending"}),"negative"===type?Toast.Z.negative(content):"positive"===type?Toast.Z.positive(content):Toast.Z.informational(content)},implementAutoswapChangesInFile=async(matches,setMatches,matchFileIndex,autoswapMatchLineIndices,shouldUndo)=>{let matchFile=matches[matchFileIndex],response=await fetch("http://localhost:5000/matches",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({fileName:matchFile.fileName,lineMatches:[...getAutoswapMatchLines(matches,matchFileIndex)],shouldUndo})}),{successes,changedLines}=await response.json();setMatches(prev=>{let newMatches=JSON.parse(JSON.stringify(prev));for(let i=0;i<autoswapMatchLineIndices.length;i++)successes[i]&&(newMatches[matchFileIndex].matchLines[autoswapMatchLineIndices[i]].changed=changedLines[i]);return newMatches}),successes.length<autoswapMatchLineIndices.length&&displayToast("negative","Error ".concat(shouldUndo?"undoing change(s)":"making change(s)"))},implementAllAutoswapChanges=async(matches,setMatches)=>{displayToast("informational","Running batch task");for(let i=0;i<matches.length;i++){let autoswapLineIndices=[];for(let j=0;j<matches[i].matchLines.length;j++)"autoswap"===matches[i].matchLines[j].type&&autoswapLineIndices.push(j);await implementAutoswapChangesInFile(matches,setMatches,i,autoswapLineIndices,!1)}displayToast("positive","All changes attempted. Refresh to see if any changes could not be made.")},setAllManualChanges=(matches,setMatches)=>{setMatches(prev=>{let newMatches=JSON.parse(JSON.stringify(prev));for(let i=0;i<newMatches.length;i++)for(let j=0;j<matches[i].matchLines.length;j++){let matchLine=newMatches[i].matchLines[j];"manual"===matchLine.type&&(matchLine.changed=!0)}return newMatches}),displayToast("positive",'All "manual" changes marked as done')},setAllSuggestionChanges=(matches,setMatches)=>{setMatches(prev=>{let newMatches=JSON.parse(JSON.stringify(prev));for(let i=0;i<newMatches.length;i++)for(let j=0;j<matches[i].matchLines.length;j++){let matchLine=newMatches[i].matchLines[j];"suggestion"===matchLine.type&&(matchLine.changed=!0)}return newMatches}),displayToast("positive",'All "suggestion" changes marked as done')},getMatchFileIndex=(matches,filePath)=>{for(let i=0;i<matches.length;i++)if(matches[i].fileName===filePath)return i;return -1},getAutoswapMatchIndices=(matches,matchFileIndex)=>{let autoswapMatchLineIndices=[];for(let i=0;i<matches[matchFileIndex].matchLines.length;i++)"autoswap"===matches[matchFileIndex].matchLines[i].type&&autoswapMatchLineIndices.push(i);return autoswapMatchLineIndices},getNonAutoswapMatchIndices=(matches,matchFileIndex)=>{let nonAutoswapMatchLineIndices=[];for(let i=0;i<matches[matchFileIndex].matchLines.length;i++)"autoswap"!==matches[matchFileIndex].matchLines[i].type&&nonAutoswapMatchLineIndices.push(i);return nonAutoswapMatchLineIndices},getManualMatchLineIndices=(matches,matchFileIndex)=>{let manualMatchLineIndices=[];for(let i=0;i<matches[matchFileIndex].matchLines.length;i++)"manual"===matches[matchFileIndex].matchLines[i].type&&manualMatchLineIndices.push(i);return manualMatchLineIndices},getSuggestionMatchLineIndices=(matches,matchFileIndex)=>{let suggestionMatchLineIndices=[];for(let i=0;i<matches[matchFileIndex].matchLines.length;i++)"suggestion"===matches[matchFileIndex].matchLines[i].type&&suggestionMatchLineIndices.push(i);return suggestionMatchLineIndices},getAutoswapMatchLines=(matches,matchFileIndex)=>matches[matchFileIndex].matchLines.filter(l=>"autoswap"===l.type),getManualMatchLines=(matches,matchFileIndex)=>matches[matchFileIndex].matchLines.filter(l=>"manual"===l.type),getSuggestionMatchLines=(matches,matchFileIndex)=>matches[matchFileIndex].matchLines.filter(l=>"suggestion"===l.type),getIsAllChangedInFile=(matches,matchFileIndex)=>{let matchLines=matches[matchFileIndex].matchLines;return matchLines.filter(ml=>ml.changed).length===matchLines.length},getIsAllManualChangedInFile=(matches,matchFileIndex)=>{let manualMatchLines=getManualMatchLines(matches,matchFileIndex);return manualMatchLines.filter(ml=>ml.changed).length===manualMatchLines.length},toggleAllNonAutoswapInFile=(matches,setMatches,matchFileIndex)=>{let nonAutoswapMatchLineIndices=getNonAutoswapMatchIndices(matches,matchFileIndex);setMatches(prev=>{let newMatches=JSON.parse(JSON.stringify(prev));for(let index of nonAutoswapMatchLineIndices)newMatches[matchFileIndex].matchLines[index].changed=!newMatches[matchFileIndex].matchLines[index].changed;return newMatches})},toggleAllManualInFile=(matches,setMatches,matchFileIndex)=>{setMatches(prev=>{let newMatches=JSON.parse(JSON.stringify(prev)),manualMatchLineIndices=getManualMatchLineIndices(matches,matchFileIndex);for(let index of manualMatchLineIndices)newMatches[matchFileIndex].matchLines[index].changed=!getIsAllManualChangedInFile(matches,matchFileIndex);return newMatches})},FileTree_FileTree=()=>{let{repoFolder}=react.useContext(RepoFolderContext),{matches,setMatches,fileTree,setFileTree}=react.useContext(MatchesContext),allNodeIds=react.useRef(new Set),[expandedNodes,setExpandedNodes]=react.useState({}),onNodeExpanded=react.useCallback((nodeId,isExpanded)=>{isExpanded?setExpandedNodes(oldExpanded=>({...oldExpanded,[nodeId]:!0})):setExpandedNodes(oldExpanded=>({...oldExpanded,[nodeId]:!1}))},[]),getStoryData=react.useCallback(props=>{allNodeIds.current.add(props.path);let subItems=null!=props.children?props.children.map(prop=>getStoryData(prop)):[];return{id:props.path,label:props.name,isInMatches:0==subItems.length&&matches.map(m=>m.fileName).includes(props.path)||subItems.length>0&&subItems.some(item=>item.isInMatches),sublabel:"Sublabel",subItems:subItems.filter(item=>item.isInMatches)}},[matches]),getNode=react.useCallback(node=>({subNodes:node.subItems,nodeId:node.id,node:node,isExpanded:expandedNodes[node.id],hasSubNodes:node.subItems.length>0}),[expandedNodes]),data=react.useMemo(()=>{var ref;if(null==fileTree)return[];let storyData=getStoryData(fileTree);return null!==(ref=null==storyData?void 0:storyData.subItems)&&void 0!==ref?ref:[]},[getStoryData,fileTree,matches]);return(0,jsx_runtime.jsxs)("span",{className:"FileTree",children:[(0,jsx_runtime.jsx)("span",{className:"top-bar",children:(0,jsx_runtime.jsxs)(ButtonGroup.h,{children:[(0,jsx_runtime.jsx)(Tooltip.u,{content:"Expand All",children:(0,jsx_runtime.jsx)(IconButton.h,{onClick(){let newExpandedNodes={};for(let nodeId of[...allNodeIds.current])newExpandedNodes["".concat(nodeId)]=!0;setExpandedNodes(newExpandedNodes)},children:(0,jsx_runtime.jsx)(esm.oZn,{})})}),(0,jsx_runtime.jsx)(Tooltip.u,{content:"Collapse All",children:(0,jsx_runtime.jsx)(IconButton.h,{onClick:()=>setExpandedNodes({}),children:(0,jsx_runtime.jsx)(esm.b1S,{})})})]})}),(0,jsx_runtime.jsx)(Tree.m,{data:data,getNode:getNode,nodeRenderer:react.useCallback(param=>{let{node,...rest}=param,isFile=0===node.subItems.length,matchFileIndex=-1;return isFile&&(matchFileIndex=getMatchFileIndex(matches,node.id)),(0,jsx_runtime.jsx)("a",{href:"#FileCard-".concat(node.id),children:(0,jsx_runtime.jsx)(TreeNode.O,{"data-is-file":isFile,label:node.label,sublabel:isFile&&matchFileIndex>=0&&"".concat(getAutoswapMatchIndices(matches,matchFileIndex).length," | ").concat(getManualMatchLineIndices(matches,matchFileIndex).length," | ").concat(getSuggestionMatchLineIndices(matches,matchFileIndex).length),onExpanded:onNodeExpanded,...rest})})},[onNodeExpanded])})]})};__webpack_require__(8131);var MenuItem=__webpack_require__(3661),ProgressRadial=__webpack_require__(4872),ExpandableBlock=__webpack_require__(1766),Text=__webpack_require__(7214);__webpack_require__(9707);var StatusSuccess=__webpack_require__(4321),StatusSuccess_default=__webpack_require__.n(StatusSuccess),StatusError=__webpack_require__(9892),StatusError_default=__webpack_require__.n(StatusError),Code=__webpack_require__(4373);__webpack_require__(2016);var react_markdown=__webpack_require__(3985);let LineChange_LineChange=props=>{var _description;let{fileName,matchFileIndex,matchLineIndex}=props,{matches,setMatches}=react.useContext(MatchesContext),[isChanging,setIsChanging]=react.useState(!1),matchLine=matches[matchFileIndex].matchLines[matchLineIndex],StatusIcon=()=>(0,jsx_runtime.jsx)(Tooltip.u,{content:matchLine.changed?"Revert change":"Make change",delay:0,duration:100,children:(0,jsx_runtime.jsx)(IconButton.h,{size:"small",async onClick(){setIsChanging(!0),"autoswap"===matches[matchFileIndex].matchLines[matchLineIndex].type?await implementAutoswapChangesInFile(matches,setMatches,matchFileIndex,[matchLineIndex],matchLine.changed):setMatches(prev=>{let newMatches=JSON.parse(JSON.stringify(prev));return newMatches[matchFileIndex].matchLines[matchLineIndex].changed=!newMatches[matchFileIndex].matchLines[matchLineIndex].changed,newMatches}),setIsChanging(!1)},disabled:isChanging,children:isChanging?(0,jsx_runtime.jsx)(ProgressRadial.p,{indeterminate:!0}):matchLine.changed?(0,jsx_runtime.jsx)(StatusSuccess_default(),{className:"status-icon-success","aria-hidden":!0}):(0,jsx_runtime.jsx)(StatusError_default(),{className:"status-icon-error-".concat(matchLine.type),"aria-hidden":!0})})});return(0,jsx_runtime.jsxs)("span",{className:"LineChange",children:[(0,jsx_runtime.jsxs)("span",{className:"header",children:[(0,jsx_runtime.jsx)(StatusIcon,{}),(0,jsx_runtime.jsx)(Text.x,{className:"line-number",children:matchLine.line_number}),(0,jsx_runtime.jsxs)(Text.x,{className:"description",children:["(",matchLine.type,")"," ",(0,jsx_runtime.jsx)(react_markdown.D,{components:{code:"code"},children:null!==(_description=matchLine.description)&&void 0!==_description?_description:""})]})]}),(0,jsx_runtime.jsxs)("span",{className:"code",children:[(0,jsx_runtime.jsxs)(Code.E,{className:"line-remove",children:[matchLine.line.substring(0,matchLine.line.indexOf(matchLine.replace)),(0,jsx_runtime.jsx)("strong",{className:"code-remove",children:matchLine.replace}),matchLine.line.substring(matchLine.line.indexOf(matchLine.replace)+matchLine.replace.length)]}),"autoswap"===matchLine.type&&(0,jsx_runtime.jsxs)(Code.E,{className:"line-add",children:[matchLine.line.substring(0,matchLine.line.indexOf(matchLine.replace)),(0,jsx_runtime.jsx)("strong",{className:"code-add",children:matchLine.with}),matchLine.line.substring(matchLine.line.indexOf(matchLine.replace)+matchLine.replace.length)]})]})]})};var classnames=__webpack_require__(4184),classnames_default=__webpack_require__.n(classnames),useTheme=__webpack_require__(9446),Button=__webpack_require__(1371),DropdownMenu=__webpack_require__(8381),CaretUpSmall=__webpack_require__(2450),CaretUpSmall_default=__webpack_require__.n(CaretUpSmall),CaretDownSmall=__webpack_require__(9550),CaretDownSmall_default=__webpack_require__.n(CaretDownSmall);__webpack_require__(6707);let CustomSplitButton=react.forwardRef(props=>{let{onClick,onDropdownClick,menuItems,className,menuPlacement="bottom-end",styleType="default",size,children,style,title,...rest}=props;(0,useTheme.F)();let[isMenuOpen,setIsMenuOpen]=react.useState(!1),[menuWidth,setMenuWidth]=react.useState(0),ref=react.useRef(null);return react.useEffect(()=>{ref.current&&setMenuWidth(ref.current.offsetWidth)},[children,size]),(0,jsx_runtime.jsxs)("span",{className:classnames_default()(className,"iui-button-split",{"iui-disabled":props.disabled}),style:style,title:title,ref:ref,children:[(0,jsx_runtime.jsx)(Button.z,{styleType:styleType,size:size,onClick:onClick,...rest,children:children}),(0,jsx_runtime.jsx)(DropdownMenu.h,{placement:menuPlacement,menuItems:menuItems,style:{minWidth:menuWidth},onShow:react.useCallback(()=>setIsMenuOpen(!0),[]),onHide:react.useCallback(()=>setIsMenuOpen(!1),[]),children:(0,jsx_runtime.jsx)(IconButton.h,{styleType:styleType,size:size,disabled:props.disabled,onClick:onDropdownClick,children:isMenuOpen?(0,jsx_runtime.jsx)(CaretUpSmall_default(),{}):(0,jsx_runtime.jsx)(CaretDownSmall_default(),{})})})]})}),FileCard_FileCard=props=>{var ref;let{matchFileIndex,isExpanded,onToggle}=props,{repoFolder}=react.useContext(RepoFolderContext),{matches,setMatches}=react.useContext(MatchesContext),file=matches[matchFileIndex],autoswapMatchLines=getAutoswapMatchLines(matches,matchFileIndex),manualMatchLines=getManualMatchLines(matches,matchFileIndex),suggestionMatchLines=getSuggestionMatchLines(matches,matchFileIndex),isChanged=getIsAllChangedInFile(matches,matchFileIndex),[isChanging,setIsChanging]=react.useState(!1),buttonMenuItems=close=>[(0,jsx_runtime.jsxs)(MenuItem.s,{onClick:()=>implementAllAutoswapChanges(matches,setMatches),disabled:autoswapMatchLines.length<=0,children:['Toggle Only "autoswap" (',autoswapMatchLines.length,")"]},1),(0,jsx_runtime.jsxs)(MenuItem.s,{onClick:()=>toggleAllManualInFile(matches,setMatches,matchFileIndex),disabled:manualMatchLines.length<=0,children:['Toggle Only "manual" (',manualMatchLines.length,")"]},2),(0,jsx_runtime.jsxs)(MenuItem.s,{onClick:()=>toggleAllManualInFile(matches,setMatches,matchFileIndex),disabled:suggestionMatchLines.length<=0,children:['Toggle Only "suggestions" (',suggestionMatchLines.length,")"]},3)],iconButtonClick=async()=>{let autoswapMatchLineIndices=getAutoswapMatchIndices(matches,matchFileIndex);setIsChanging(!0),toggleAllNonAutoswapInFile(matches,setMatches,matchFileIndex),await implementAutoswapChangesInFile(matches,setMatches,matchFileIndex,autoswapMatchLineIndices,isChanged),setIsChanging(!1)},myRef=react.useRef(null),fileNameSplit=file.fileName.split("/");return(0,jsx_runtime.jsx)(ExpandableBlock.P,{title:(0,jsx_runtime.jsxs)("span",{id:"FileCard-".concat(file.fileName),className:"header",ref:myRef,children:[(0,jsx_runtime.jsx)(Tooltip.u,{content:isChanged?"Revert all change(s)":"Make all changes(s)",children:(0,jsx_runtime.jsx)(CustomSplitButton,{menuItems:buttonMenuItems,size:"small",disabled:isChanging,onClick(e){e.stopPropagation(),iconButtonClick()},onDropdownClick(e){e.stopPropagation()},children:isChanging?(0,jsx_runtime.jsx)(ProgressRadial.p,{indeterminate:!0}):isChanged?(0,jsx_runtime.jsx)(StatusSuccess_default(),{className:"status-icon-success","aria-hidden":!0}):(0,jsx_runtime.jsx)(StatusError_default(),{className:"status-icon-error","aria-hidden":!0})})}),(0,jsx_runtime.jsxs)("span",{className:"content",children:[(0,jsx_runtime.jsxs)("span",{className:"title-path",children:[(0,jsx_runtime.jsx)(Text.x,{className:"title",variant:"leading",children:fileNameSplit[fileNameSplit.length-1]}),(0,jsx_runtime.jsx)(Text.x,{className:"path",variant:"small",children:fileNameSplit.slice(0,fileNameSplit.length-1).join("/").slice((null!==(ref=null==repoFolder?void 0:repoFolder.current)&&void 0!==ref?ref:"").length)})]}),(0,jsx_runtime.jsxs)(Text.x,{className:"sub-title",variant:"small",children:[autoswapMatchLines.length," autoswaps ∙ ",manualMatchLines.length," ","manual ∙ ",suggestionMatchLines.length," suggestions"]})]})]}),className:"FileCard",isExpanded:isExpanded,onToggle(isExpanding){if(onToggle(isExpanding),!isExpanding){var ref;null===(ref=myRef.current)||void 0===ref||ref.scrollIntoView({behavior:"smooth"})}},children:file.matchLines.map((matchLine,index)=>(0,jsx_runtime.jsx)(LineChange_LineChange,{fileName:file.fileName,matchFileIndex:matchFileIndex,matchLineIndex:index},index))})};var ExpandAll=__webpack_require__(6669),ExpandAll_default=__webpack_require__.n(ExpandAll),CollapseAll=__webpack_require__(6634),CollapseAll_default=__webpack_require__.n(CollapseAll),Dialog=__webpack_require__(6829);__webpack_require__(3317);let InstructionsSection_InstructionsSection=()=>{let{matches,setMatches}=react.useContext(MatchesContext),[isOpen,setIsOpen]=react.useState(!1),closeDialog=()=>{setIsOpen(!1)},onClose=event=>{closeDialog()},primaryButtonHandle=event=>{implementAllAutoswapChanges(matches,setMatches),closeDialog()},secondaryButtonHandle=event=>{closeDialog()};return(0,jsx_runtime.jsxs)("span",{className:"InstructionsSection",children:[(0,jsx_runtime.jsx)(Text.x,{variant:"subheading",children:"Helpful tips:"}),(0,jsx_runtime.jsx)("ul",{children:(0,jsx_runtime.jsx)("li",{children:"Keep refreshing from time to time to see the latest changes."})}),(0,jsx_runtime.jsx)(Text.x,{variant:"subheading",children:"Categories of recommendations:"}),(0,jsx_runtime.jsxs)("ul",{style:{display:"block"},children:[(0,jsx_runtime.jsxs)("li",{children:[(0,jsx_runtime.jsxs)(Text.x,{children:['"autoswap": Changes that the tool can ',(0,jsx_runtime.jsx)("strong",{children:"automatically"})," ","implement (nearly perfect replacements)."]}),(0,jsx_runtime.jsx)(Button.z,{size:"small",startIcon:(0,jsx_runtime.jsx)(esm.a$F,{style:{fill:"red"},"aria-hidden":!0}),onClick(){setIsOpen(!0)},children:"Implement ALL"})]}),(0,jsx_runtime.jsxs)("li",{children:[(0,jsx_runtime.jsxs)(Text.x,{children:['"manual": Changes that the tool can recommend but has to done'," ",(0,jsx_runtime.jsx)("strong",{children:"manually"})]}),(0,jsx_runtime.jsx)(Button.z,{size:"small",startIcon:(0,jsx_runtime.jsx)(esm.a$F,{style:{fill:"orange"},"aria-hidden":!0}),onClick:()=>setAllManualChanges(matches,setMatches),children:"Mark ALL as done"})]}),(0,jsx_runtime.jsxs)("li",{children:[(0,jsx_runtime.jsxs)(Text.x,{children:['"suggestion": ',(0,jsx_runtime.jsx)("strong",{children:"Notes"})," about possible issues/needed replacements"]}),(0,jsx_runtime.jsx)(Button.z,{size:"small",startIcon:(0,jsx_runtime.jsx)(esm.a$F,{style:{fill:"lightblue"},"aria-hidden":!0}),onClick:()=>setAllSuggestionChanges(matches,setMatches),children:"Mark ALL as done"})]})]}),(0,jsx_runtime.jsxs)(Dialog.V,{isOpen:isOpen,onClose:onClose,closeOnEsc:!0,closeOnExternalClick:!0,preventDocumentScroll:!0,trapFocus:!0,setFocus:!0,isDismissible:!0,children:[(0,jsx_runtime.jsx)(Dialog.V.Backdrop,{}),(0,jsx_runtime.jsxs)(Dialog.V.Main,{children:[(0,jsx_runtime.jsx)(Dialog.V.TitleBar,{titleText:(0,jsx_runtime.jsxs)("span",{className:"dialog-titlebar",children:[(0,jsx_runtime.jsx)(esm.a$F,{className:"icon",fill:"red"}),"Are you sure?"]})}),(0,jsx_runtime.jsxs)(Dialog.V.Content,{children:['"autoswap" changes are ',(0,jsx_runtime.jsx)("strong",{children:"NOT PERFECT"}),'. Clicking "Implement all autoswap changes" will attempt to write'," ",(0,jsx_runtime.jsx)("strong",{children:"ALL"}),' "autoswap" change recommendations displayed here.',(0,jsx_runtime.jsx)("br",{}),(0,jsx_runtime.jsx)("br",{}),"It is recommended you still do a ",(0,jsx_runtime.jsx)("strong",{children:"quick manual scan"})," ","after running this to confirm if all changes match your needs."]}),(0,jsx_runtime.jsxs)(Dialog.V.ButtonBar,{children:[(0,jsx_runtime.jsx)(Button.z,{styleType:"cta",onClick:primaryButtonHandle,className:"proceed-button",children:"Proceed"}),(0,jsx_runtime.jsx)(Button.z,{onClick:secondaryButtonHandle,children:"Cancel"})]})]})]})]})},getMatches=async(repoFolder,gettingMatches)=>{if(gettingMatches)return null;let response=await fetch("http://localhost:5000/matches?repoFolder=".concat(repoFolder),{method:"GET",headers:{"Content-Type":"application/json"}}),matches=null;return response.ok?matches=await response.json():displayToast("negative","Error finding matches"),matches},getFolders=async repoFolder=>{let response=await fetch("http://localhost:5000/files?repoFolder=".concat(repoFolder),{method:"GET",headers:{"Content-Type":"application/json"}}),folders=null;return response.ok?folders=await response.json():displayToast("negative","Error scanning the provided folder. Try ensuring the folder is a git repo folder."),folders},FilesSection_FilesSection=()=>{let[openedBlocks,setOpenedBlocks]=react.useState([]),toggleHandler=(isExpanding,id)=>{isExpanding?setOpenedBlocks(prev=>[...prev,id]):setOpenedBlocks(prev=>prev.filter(b=>b!==id))},{repoFolder}=react.useContext(RepoFolderContext),{matches,setMatches,gettingMatches,setGettingMatches}=react.useContext(MatchesContext);return(0,jsx_runtime.jsxs)("span",{className:"FilesSection",children:[(0,jsx_runtime.jsx)("span",{className:"filters",children:(0,jsx_runtime.jsxs)(ButtonGroup.h,{children:[(0,jsx_runtime.jsx)(Tooltip.u,{content:"Expand all",children:(0,jsx_runtime.jsx)(IconButton.h,{onClick(){setOpenedBlocks([...Array(matches.length)].map((_,index)=>index))},children:(0,jsx_runtime.jsx)(ExpandAll_default(),{})})}),(0,jsx_runtime.jsx)(Tooltip.u,{content:"Collapse all",children:(0,jsx_runtime.jsx)(IconButton.h,{onClick(){setOpenedBlocks([])},children:(0,jsx_runtime.jsx)(CollapseAll_default(),{})})}),(0,jsx_runtime.jsx)(Tooltip.u,{content:"Refresh",children:(0,jsx_runtime.jsx)(IconButton.h,{async onClick(){var ref;setMatches([]),setGettingMatches(!0);let matches=await getMatches(null!==(ref=null==repoFolder?void 0:repoFolder.current)&&void 0!==ref?ref:"",gettingMatches);setGettingMatches(!1),null!=matches&&setMatches(matches)},children:(0,jsx_runtime.jsx)(esm.zf_,{})})})]})}),(0,jsx_runtime.jsxs)("span",{className:"cards",children:[(0,jsx_runtime.jsx)(InstructionsSection_InstructionsSection,{}),gettingMatches?(0,jsx_runtime.jsx)(ProgressRadial.p,{indeterminate:!0}):matches.map((fileMatches,index)=>(0,jsx_runtime.jsx)(FileCard_FileCard,{matchFileIndex:index,isExpanded:openedBlocks.includes(index),onToggle:isExpanding=>toggleHandler(isExpanding,index)},index))]})]})};__webpack_require__(2952);var Header=__webpack_require__(4463),HeaderLogo=__webpack_require__(7441),HeaderBreadcrumbs=__webpack_require__(8636),Input=__webpack_require__(1347);let AppHeader_AppHeader=()=>{let{repoFolder}=react.useContext(RepoFolderContext),{theme,setTheme}=react.useContext(AppThemeContext),{matches,setMatches,gettingMatches,setGettingMatches,fileTree,setFileTree}=react.useContext(MatchesContext),[repoFolderTextInput,setRepoFolderTextInput]=react.useState(""),removeMultipleSlashes=str=>str.replace(/\/\/+/g,"/");return(0,jsx_runtime.jsx)(Header.h,{className:"AppHeader",appLogo:(0,jsx_runtime.jsx)(HeaderLogo.O,{logo:(0,jsx_runtime.jsx)(esm.fCz,{})}),breadcrumbs:(0,jsx_runtime.jsx)(HeaderBreadcrumbs.Y,{items:[(0,jsx_runtime.jsx)(Text.x,{className:"title",variant:"leading",children:"iTwinUI Migration Tool"},"title")]}),children:(0,jsx_runtime.jsxs)(ButtonGroup.h,{className:"input-bar",children:[(0,jsx_runtime.jsx)(Input.I,{className:"input",value:repoFolderTextInput,onChange:e=>setRepoFolderTextInput(e.target.value),placeholder:"Enter repo path (Should be a git repo)"}),(0,jsx_runtime.jsx)(Button.z,{className:"button",async onClick(){var ref,ref1;let cleanedRepoFolderTextInput=removeMultipleSlashes(repoFolderTextInput);setRepoFolderTextInput(cleanedRepoFolderTextInput),null!==repoFolder&&(repoFolder.current=cleanedRepoFolderTextInput),setMatches([]);let folders=await getFolders(null!==(ref=null==repoFolder?void 0:repoFolder.current)&&void 0!==ref?ref:"");if(null!=folders){setFileTree(folders),displayToast("positive","Repo folder found. Scanning it for matches"),setGettingMatches(!0);let matches=await getMatches(null!==(ref1=null==repoFolder?void 0:repoFolder.current)&&void 0!==ref1?ref1:"",gettingMatches);null!=matches&&setMatches(matches),setGettingMatches(!1)}},children:"Search"})]}),actions:[(0,jsx_runtime.jsx)(Tooltip.u,{content:"Change to ".concat("light"===theme?"dark":"light"," theme"),children:(0,jsx_runtime.jsx)(IconButton.h,{styleType:"borderless",onClick:()=>setTheme(prev=>"light"===prev?"dark":"light"),children:"light"===theme?(0,jsx_runtime.jsx)(esm.iIM,{}):(0,jsx_runtime.jsx)(esm.zOe,{})})},"icon-button")]})};var ThemeProvider=__webpack_require__(5287),head=__webpack_require__(9008),head_default=__webpack_require__.n(head);let AppThemeContext=react.createContext({theme:"light",setTheme(){}}),MatchesContext=react.createContext({matches:[],setMatches(){},gettingMatches:!1,setGettingMatches(){},fileTree:{name:"",path:"",children:[]},setFileTree(){}}),RepoFolderContext=react.createContext({repoFolder:null});function pages_App(){let repoFolder=react.useRef(""),[theme,setTheme]=react.useState("light"),[matches,setMatches]=react.useState([]),[gettingMatches,setGettingMatches]=react.useState(!1),[fileTree,setFileTree]=react.useState();return(0,jsx_runtime.jsx)(RepoFolderContext.Provider,{value:{repoFolder},children:(0,jsx_runtime.jsx)(AppThemeContext.Provider,{value:{theme,setTheme},children:(0,jsx_runtime.jsx)(MatchesContext.Provider,{value:{matches,setMatches,gettingMatches,setGettingMatches,fileTree,setFileTree},children:(0,jsx_runtime.jsx)(ThemeProvider.f6,{theme:theme,children:(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsxs)(head_default(),{children:[(0,jsx_runtime.jsx)("title",{children:"iTwinUI Migration Tool"}),(0,jsx_runtime.jsx)("link",{rel:"icon",href:"/favicon.svg"})]}),(0,jsx_runtime.jsxs)("div",{className:"App",children:[(0,jsx_runtime.jsx)(AppHeader_AppHeader,{}),(0,jsx_runtime.jsxs)("span",{className:"content",children:[(0,jsx_runtime.jsx)(FileTree_FileTree,{}),(0,jsx_runtime.jsx)(FilesSection_FilesSection,{})]})]})]})})})})})}},2952:function(){},4063:function(){},8131:function(){},9707:function(){},2016:function(){},3317:function(){},1784:function(){}},function(__webpack_require__){__webpack_require__.O(0,[222,774,888,179],function(){return __webpack_require__(__webpack_require__.s=8312)}),_N_E=__webpack_require__.O()}]);